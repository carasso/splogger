{"name":"SPLogger","tagline":"Splunk Mobile Logging API","body":"splogger\r\n========\r\n\r\nSplunk Mobile Logging API\r\n\r\nThe following notes related to the iOS (iPhone) version.\r\n\r\n\r\n# Release notes #\r\n\r\n\r\n# Logging data on handheld devices #\r\n\r\nIf you want to log events, such as track system or user behavior in\r\nyour iOS application, start by downloading the SPLogger API from\r\ngithub. Currently the system logs to Splunk's cloud product, Storm\r\n(www.splunkstorm.com), but future versions can log to your own instances\r\nof Splunk.  To get the SPLogger API, download it via either method:\r\n\r\n*  https://github.com/carasso/splogger/archive/master.zip\r\n*  https://github.com/carasso/splogger.git\r\n\r\nThe directory has two folders:\r\n\r\n1. lib --  the source code for the SPLogger API\r\n2. sample_app -- a small sample iPhone app that asks for a user's name\r\n   and has a button that logs an event.\r\n\r\n\r\n# Initializing SPLogger #\r\n\r\nBefore you do any logging to Splunk, you'll need to initialize the\r\nSPLogger object.  This initialization can be done in applicationDidFinishLaunching:\r\nof application:didFinishLaunchingWithOptions in your Application delegate.  In the\r\nsample_app, we this in done in viewDidLoad() in DCViewController.m, with the \r\nfollowing code:\r\n \r\n    [SPLogger                init:@\"storm\" \r\n                        authToken:@\"IL8Yx-JNKYak6oyTBuGX1vCfyAU7TsU6svfwnzQVTHw5gfRysmbV0l1UUNkIk33g9aWZ_tJUBIN=\"\r\n                        projectID:@\"4ce5c2e7bfb211e0b75b12313b9c248a\"\r\n           uploadIntervalInEvents:2 \r\n             uploadIntervalInSecs:5 \r\n              shouldLogSystemData:YES \r\n            shouldLogSystemEvents:NO \r\n           shouldLogSynchronously:YES];\r\n\r\nThe included authToken and projectID are invalid and you'll need to get your own proper values at splunkstorm.com.\r\n\r\n\r\n\r\n\r\n# Logging Events #\r\nAfter initializing the SPLogger object, you are ready to log events. To log simple strings, try examples such as:\r\n\r\n    [SPLogger track: @\"My Message\"];\r\n    [SPLogger track: [[NSString alloc] initWithFormat: @\"USER %@ PUSHED BUTTON\", nameString]];\r\n\r\nIf you want to add properties to the event or specify an alternative timestamp, try:\r\n\r\n   + (void) track:(NSString*) event properties:(NSDictionary*) properties;\r\n   + (void) track:(NSString*) event properties:(NSDictionary*) properties timestamp: (NSNumber*) timestamp ;\r\n\r\n\r\n# Using Storm for Analytics\r\n\r\nAll your events are uploaded to splunkstorm.com on a regular interval,\r\ndepending on how your initialzed SPLogger.  In the above code, events\r\nare uploaded every 5 seconds, which is rather aggressive but useful\r\nfor testing.\r\n\r\nYour events in Splunk always have a few common properties: source,\r\nsourcetype, and host.  \r\n\r\n1. The \"source\" value will be the name of your application, and in the\r\n   case of the sample_app will be \"helloworld\".\r\n\r\n2. The \"sourcetype\" value will always be \"splogger\".\r\n\r\n3. The \"host\" value will be the concatenated MAC addresses of the\r\n   mobile device's networks (e.g., \"3c:07:54:79:a6:e2,\r\n   68:a8:6d:4a:08:72, 0a:a8:6d:4a:08:72\")\r\n\r\nThe SPLogger initializer API has the option (set to YES above) to log\r\nsystem data, and if YES, will add additional system properties to your\r\nevents, such as sys_machine=\"x86_64\" sys_model=\"MacBookPro8,1\".\r\n\r\nThis is not the place to learn Splunk Search Processing Language\r\n(SPL), but the following example searches will give you a basic idea\r\nof some of the power available with easy:\r\n\r\nShow the top 10 users of my apps:  \r\n\r\n     sourcetype=splogger | top 10 host\r\n\r\nShow the top 5 hardware types:\r\n\r\n     sourcetype=splogger | top 5 sys_machine, sys_model\r\n\r\nOf the users on level 5 of my game, what is the rate of success or failure (assumes I logged with an property called 'success'):\r\n\r\n     sourcetype=splogger level=5 | stats count by success:\r\n\r\nShow a chart of usage by time, broken up by each of my apps:\r\n\r\n     sourcetype=splogger | timechart count by source\r\n\r\nHow long do users typical use my apps, assuming a 5 minute pause means the user is done\r\n\r\n     sourcetype=splogger | transaction host maxpause=5m | stats min(duration), max(duration), avg(duration)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}